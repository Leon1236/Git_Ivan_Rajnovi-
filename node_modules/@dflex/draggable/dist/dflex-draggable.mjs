class t extends class{constructor(t,s){this.setAxes(t,s)}setAxes(t,s){this.x=t,this.y=s}clone(t){this.setAxes(t.x,t.y)}getInstance(){return{x:this.x,y:this.y}}isEqual(t){return this.x===t.x&&this.y===t.y}}{increase(t){this.x+=t.x,this.y+=t.y}decrease(t){this.x-=t.x,this.y-=t.y}multiplyAll(t){this.x*=t,this.y*=t}getMultiplied(t){return{x:this.x*t,y:this.y*t}}}function s(t,s){return`${t}-${s}`}class i{constructor(){this.indicator={},this.branches={},this.branchesByDepth={},this.prevDepth=-99,this.prevKey=s(0,0)}initIndicators(t){void 0===this.indicator[t]&&(this.indicator[t]=-1),void 0===this.indicator[t+1]&&(this.indicator[t+1]=0),void 0===this.indicator[t+2]&&(this.indicator[t+2]=0)}addElementIDToDepthCollection(t,s){if(!Array.isArray(this.branchesByDepth[s]))return void(this.branchesByDepth[s]=[t]);this.branchesByDepth[s].find((s=>s===t))||this.branchesByDepth[s].push(t)}addElementIDToSiblingsBranch(t,s){Array.isArray(this.branches[s])||(this.branches[s]=[]);return this.branches[s].push(t)-1}getElmBranch(t){return this.branches[t]}accumulateIndicators(t){t!==this.prevDepth&&this.initIndicators(t);const i=this.indicator[t+1],h=s(t,i),e=s(t+1,this.indicator[t+2]),r=0===t?null:this.prevKey;return this.prevKey=h,this.indicator[t]+=1,t<this.prevDepth&&(this.indicator[0]=0),this.prevDepth=t,{CHK:r,SK:h,PK:e,parentIndex:i}}register(t,s){const{CHK:i,SK:h,PK:e,parentIndex:r}=this.accumulateIndicators(s);this.addElementIDToDepthCollection(h,s);return{order:{self:this.addElementIDToSiblingsBranch(t,h),parent:r},keys:{SK:h,PK:e,CHK:i}}}removeElementIDFromBranch(t,s){let i;return Array.isArray(this.branches[t])&&void 0!==this.branches[t][s]?([i]=this.branches[t].splice(s,1),0===this.branches[t].length&&delete this.branches[t],i):null}destroyBranch(t,s){if(!this.branches[t])return;const i=this.branches[t].pop();i&&(s(i),this.branches[t].length>0?this.destroyBranch(t,s):delete this.branches[t],Object.keys(this.branchesByDepth).forEach((s=>{const i=Number(s);this.branchesByDepth[i]=this.branchesByDepth[i].filter((s=>s!==t)),0===this.branchesByDepth[i].length&&delete this.branchesByDepth[i]})))}destroy(){["branches","branchesByDepth","branchesOrder","branchesByDepth","indicator"].forEach((t=>{this[t]=null}))}}class h extends class extends class{constructor(t,s){if(this.id=t,s.isInitialized)return this.attach(),this.isPaused=s.isPaused,void(this.isPaused||this.initTranslate());this.isInitialized=!1,this.ref=null,this.isPaused=!0}attach(){this.ref=document.getElementById(this.id),this.isInitialized=!0}detach(){this.isInitialized=!1,this.ref=null}transform(t,s){this.ref.style.transform=`translate3d(${t}px,${s}px, 0)`}initTranslate(){this.translate||(this.translate=new t(0,0),this.t={}),this.isPaused=!1}setDataset(t,s){"index"!==t&&"gridX"!==t&&"gridY"!==t?this.t[t]||(this.ref.dataset[t]=`${s}`,this.t[t]=!0):this.ref.dataset[t]=`${s}`}rmDateset(t){delete this.ref.dataset[t],this.t[t]&&(this.t[t]=!1)}setAttribute(t,s){this.t[t]||(this.ref.setAttribute(t,s),this.t[t]=!0)}removeAttribute(t){this.t[t]&&(this.ref.removeAttribute(t),this.t[t]=!1)}clearAttributes(){Object.keys(this.t).forEach((t=>{"dragged"===t?this.removeAttribute(t):this.rmDateset(t)})),this.t={}}}{constructor(t,s){const{order:i,keys:h,depth:e,scrollX:r,scrollY:n,readonly:a,id:o}=t;super(o,s),this.order=i,this.keys=h,this.depth=e,this.readonly=a,this.isVisible=this.isInitialized&&!this.isPaused,this.isInitialized&&this.setDataset("index",this.order.self),this.isPaused||this.i(r,n),this.animatedFrame=null}i(s,i){const{height:h,width:e,left:r,top:n}=this.ref.getBoundingClientRect();this.offset={height:h,width:e,left:r+s,top:n+i},this.currentPosition=new t(this.offset.left,this.offset.top),this.grid=new t(0,0),this.hasToTransform=!1}h(t){this.translate.increase(t);const{left:s,top:i}=this.offset;this.currentPosition.setAxes(s+this.translate.x,i+this.translate.y),this.isVisible||(this.hasToTransform=!0)}resume(t,s){this.isInitialized||this.attach(),this.initTranslate(),this.i(t,s)}changeVisibility(t){t!==this.isVisible&&(this.isVisible=t,this.hasToTransform&&this.isVisible&&(this.transformElm(),this.hasToTransform=!1))}transformElm(){null!==this.animatedFrame&&window.cancelAnimationFrame(this.animatedFrame),this.animatedFrame=window.requestAnimationFrame((()=>{this.transform(this.translate.x,this.translate.y),this.animatedFrame=null}))}o(t){const{self:s}=this.order,i=s+t;return this.order.self=i,this.setDataset("index",i),{oldIndex:s,newIndex:i}}assignNewPosition(t,s){s<0||s>t.length-1||t[s].length>0||(t[s]=this.id)}l(t,s,i){t[i]="",t[s]=this.id}u(t,s,i,h=!1){if(i){const t={ID:i,axis:s,translate:{x:this.translate.x,y:this.translate.y}};Array.isArray(this.g)?this.g.push(t):this.g=[t]}this.h(t),h||this.isVisible?(this.transformElm(),this.hasToTransform=!1):this.hasToTransform=!0}setPosition(t,s,i,h,e){"z"===e?i.multiplyAll(s):i[e]*=s,this.u(i,e,h);const{oldIndex:r,newIndex:n}=this.o(1*s);if("z"===e){const t=1*s;this.grid.increase({x:t,y:t})}else this.grid[e]+=1*s;this.l(t,n,r)}rollBack(t,s){if(!Array.isArray(this.g)||0===this.g.length||this.g[this.g.length-1].ID!==t)return;const i=this.g.pop(),{translate:h,axis:e}=i,r={x:h.x-this.translate.x,y:h.y-this.translate.y};let n=0;"z"===e?(n=r.x>0||r.y>0?1:-1,this.grid.increase({x:n,y:n})):(n=r[e]>0?1:-1,this.grid[e]+=n),this.u(r,e,void 0,s),this.o(n),this.rollBack(t,s)}}{static getRectByAxis(t){return"x"===t?"width":"height"}static getDistance(t,s,i){let h=t[i]-s.currentPosition[i];return h+=s.translate[i],h}static getDisplacement(t,s,i){const h="x"===i?s.getRectRight():s.getRectBottom();return t[i]-h}isConnected(){return this.ref.isConnected}isPositionedUnder(t){return t<=this.currentPosition.y}isPositionedLeft(t){return t<=this.currentPosition.x}hasSamePosition(t,s){return this.currentPosition[s]===t.currentPosition[s]}getRectBottom(){return this.currentPosition.y+this.offset.height}getRectRight(){return this.currentPosition.x+this.offset.width}getRectDiff(t,s){const i=h.getRectByAxis(s);return this.offset[i]-t.offset[i]}getDisplacement(t,s){return h.getDisplacement(this.currentPosition,t,s)}getDistance(t,s){return h.getDistance(this.currentPosition,t,s)}getOffset(){return{width:this.offset.width,height:this.offset.height,top:this.currentPosition.y,left:this.currentPosition.x}}}class e extends class{constructor(){this.p=null,this.registry={},this.DOMGen=new i}m(t){const{id:s,depth:i,isPaused:e,isInitialized:r,...n}=t,{order:a,keys:o}=this.DOMGen.register(s,i),l={id:s,order:a,keys:o,depth:i,...n};this.registry[s]=new h(l,{isInitialized:r,isPaused:e})}register(t){if(!this.p||t.parentID===this.p)return this.p=t.parentID,void this.m(t);const{parentID:s,depth:i}=t;this.DOMGen.register(s,i+1),this.m(t)}getElmBranchByKey(t){return this.DOMGen.getElmBranch(t)}unregister(t){delete this.registry[t]}destroyBranch(t){this.DOMGen.destroyBranch(t,(t=>{this.unregister(t)}))}destroy(){Object.keys(this.DOMGen.branches).forEach((t=>{this.DOMGen.destroyBranch(t,(t=>{delete this.registry[t]}))})),this.DOMGen.destroy()}}{register(t){super.register({id:t,depth:0,parentID:"",isInitialized:!0,isPaused:!1,scrollX:0,scrollY:0,readonly:!1})}}var r=new e;const n=class{constructor(s,{x:i,y:h}){this.draggedElm=s;const{translate:e}=this.draggedElm;this.outerOffset=new t(-i+e.x,-h+e.y),this.translatePlaceholder=new t(0,0),this.setDragged(!0)}changeStyle(t,s){s?t.forEach((({prop:t,dragValue:s})=>{this.draggedElm.ref.style[t]=s})):t.forEach((({prop:t,afterDragValue:s})=>{this.draggedElm.ref.style[t]=s}))}setDragged(t){if(t){this.changeStyle(n.draggedStyle,!0);const t=window.getSelection();return t&&t.removeAllRanges(),void this.draggedElm.setAttribute("dragged","true")}this.changeStyle(n.draggedStyle,!1),this.draggedElm.clearAttributes()}translate(t,s){this.translatePlaceholder.setAxes(t+this.outerOffset.x,s+this.outerOffset.y),this.draggedElm.transform(this.translatePlaceholder.x,this.translatePlaceholder.y)}};let a=n;a.draggedStyle=[{prop:"position",dragValue:"relative",afterDragValue:""},{prop:"zIndex",dragValue:"99",afterDragValue:""},{prop:"user-select",dragValue:"none",afterDragValue:""}];class o extends a{constructor(t,s){super(r.registry[t],s)}dragAt(t,s){this.translate(t,s),this.draggedElm.translate.clone(this.translatePlaceholder)}endDragging(){this.setDragged(!1)}}export{a as AbstractDraggable,o as Draggable,r as store};
